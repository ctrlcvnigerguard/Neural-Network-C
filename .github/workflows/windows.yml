game: Windows

on: [push]

env:
  BUILD_TYPE: Debug

jobs:
  msvc2019:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake C
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019"

    - name: Build C
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel 10

  #    - name: Test C
  #      working-directory: ${{runner.workspace}}/build
  #      run: cmake --build . --target clean --parallel 10
    - name: Configure CMake CPP
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DLANG=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build CPP
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel 10

  #    - name: Test CPP
  #      working-directory: ${{runner.workspace}}/build
  #      run: cmake --build . --target clean --parallel 10

  clang9:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: install Clang
        run: curl -fsSL -o LLVM9.exe https://releases.llvm.org/9.0.0/LLVM-9.0.0-win64.exe ; 7z x LLVM9.exe -y -o "C:/Program Files/LLVM"

      - name: Configure CMake C
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "MinGW Makefiles" -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe"

      - name: Build C
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel 10

      - name: Configure CMake CPP
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DLANG=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "MinGW Makefiles" -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe"

      - name: Build CPP
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel 10

  clang10:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: install Clang
        run: curl -fsSL -o LLVM10.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe ; 7z x LLVM10.exe -y -o "C:/Program Files/LLVM"

      - name: Configure CMake C
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "MinGW Makefiles" -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe"

      - name: Build C
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel 10

      - name: Configure CMake CPP
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DLANG=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "MinGW Makefiles" -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe"

      - name: Build CPP
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel 10

  clang-cl-10-x64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake C
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019" -A x64 -T ClangCL

      - name: Build C
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel 10

      - name: Configure CMake CPP
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DLANG=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019" -A x64 -T ClangCL

      - name: Build CPP
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel 10
