name: Ubuntu

on: [push]

env:
  BUILD_TYPE: Debug

jobs:
  gcc_build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install gcc-10 g++-10
      shell: bash

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake C
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DNN_LANG=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DNN_BuildTests=ON
      env:
        CC:   gcc-10
        CXX:  g++-10

    - name: Build C
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel 10

    - name: Test C
      working-directory: ${{runner.workspace}}/build
      run: ctest -j 10 --output-on-failure


    - name: Configure CMake CPP
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DNN_LANG=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DNN_BuildTests=ON
      env:
        CC:   gcc-10
        CXX:  g++-10

    - name: Build CPP
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel 10

    - name: Test CPP
      working-directory: ${{runner.workspace}}/build
      run: ctest -j 10 --output-on-failure

  clang_build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: install_clang
      run: |
        sudo apt update
        sudo apt install clang-10
      shell: bash

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake C
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DNN_LANG=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DNN_BuildTests=ON
      env:
        CC:   clang-10
        CXX:  clang++-10

    - name: Build C
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel 10

    - name: Test C
      working-directory: ${{runner.workspace}}/build
      run: ctest -j 10 --output-on-failure


    - name: Configure CMake CPP
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DNN_LANG=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DNN_BuildTests=ON
      env:
        CC:   clang-10
        CXX:  clang++-10

    - name: Build CPP
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel 10

    - name: Test CPP
      working-directory: ${{runner.workspace}}/build
      run: ctest -j 10 --output-on-failure



  clang_build_cxx20:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: install_gcc
      run: |
           sudo apt update
           sudo apt install clang-10
      shell: bash
    - name: cmake
      run: cmake -S . -B build -D CMAKE_BUILD_TYPE=Debug -DJSON_BuildTests=On -DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=ON
      env:
        CC:   clang-10
        CXX:  clang++-10
    - name: build
      run: cmake --build build --parallel 10
    - name: test
      run: cd build ; ctest -j 10 --output-on-failure
